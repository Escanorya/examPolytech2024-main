services:

  mysql-db:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: polytech
      MYSQL_DATABASE: database
      MYSQL_USER: polytech
      MYSQL_PASSWORD: polytech
    ports:
      - 3306:3306
    networks:
      - network
    volumes:
      - database:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 10s
      timeout: 3s
      retries: 3

  java:
    build:
      context: java/
      dockerfile: Dockerfile
    container_name: java
    environment:
      - spring.datasource.url=jdbc:mysql://mysql-db:3306/database
      - spring.datasource.username=polytech
      - spring.datasource.password=polytech
    ports:
      - 8448:8448
    networks:
      - network
    depends_on:
      mysql-db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: curl http://localhost:8448/actuator/health
      interval: 10s
      timeout: 3s
      retries: 10

  angular:
    build:
      context: angular/
      dockerfile: Dockerfile
    image: angular
    container_name: angular
    ports:
      - 8888:80
    environment:
      - BACKEND_URL=http://localhost:8448
    depends_on:
      java:
        condition: service_healthy
        restart: true

networks:
  network:

volumes:
  database:
